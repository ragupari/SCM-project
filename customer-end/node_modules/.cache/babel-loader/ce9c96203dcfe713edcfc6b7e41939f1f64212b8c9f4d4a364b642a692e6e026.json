{"ast":null,"code":"var _jsxFileName = \"/Users/parishith/SCM/customer-end/src/pages/Product.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Products = () => {\n  _s();\n  const location = useLocation();\n\n  // Extract categoryID from query params\n  const query = new URLSearchParams(location.search);\n  const categoryID = query.get('categoryID');\n\n  // State to store products data\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Fetch products based on categoryID\n    const fetchProducts = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const response = await fetch(`/products?categoryID=${categoryID}`);\n\n        // Check if the response is actually JSON\n        const contentType = response.headers.get(\"content-type\");\n        if (!contentType || !contentType.includes(\"application/json\")) {\n          throw new Error('Received non-JSON response');\n        }\n        const data = await response.json();\n        setProducts(data); // Store the fetched data\n      } catch (error) {\n        console.error('Error fetching products:', error);\n        setError('Failed to fetch products');\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (categoryID) {\n      fetchProducts();\n    }\n  }, [categoryID]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), categoryID && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Category ID: \", categoryID]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: product.name\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Products, \"F4+xgx9yfjjLWN0vcceRaS3Znuk=\", false, function () {\n  return [useLocation];\n});\n_c = Products;\nexport default Products;\nvar _c;\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","jsxDEV","_jsxDEV","Products","_s","location","query","URLSearchParams","search","categoryID","get","products","setProducts","loading","setLoading","error","setError","fetchProducts","response","fetch","contentType","headers","includes","Error","data","json","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","product","name","id","_c","$RefreshReg$"],"sources":["/Users/parishith/SCM/customer-end/src/pages/Product.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst Products = () => {\n  const location = useLocation();\n  \n  // Extract categoryID from query params\n  const query = new URLSearchParams(location.search);\n  const categoryID = query.get('categoryID');\n\n  // State to store products data\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Fetch products based on categoryID\n    const fetchProducts = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        \n        const response = await fetch(`/products?categoryID=${categoryID}`);\n  \n        // Check if the response is actually JSON\n        const contentType = response.headers.get(\"content-type\");\n        if (!contentType || !contentType.includes(\"application/json\")) {\n          throw new Error('Received non-JSON response');\n        }\n  \n        const data = await response.json();\n        setProducts(data); // Store the fetched data\n      } catch (error) {\n        console.error('Error fetching products:', error);\n        setError('Failed to fetch products');\n      } finally {\n        setLoading(false);\n      }\n    };\n  \n    if (categoryID) {\n      fetchProducts();\n    }\n  }, [categoryID]);\n  \n\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>{error}</div>;\n\n  return (\n    <div className=\"container\">\n      <h1>Products</h1>\n      {categoryID && <p>Category ID: {categoryID}</p>}\n      <ul>\n        {products.map((product) => (\n          <li key={product.id}>{product.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Products;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}