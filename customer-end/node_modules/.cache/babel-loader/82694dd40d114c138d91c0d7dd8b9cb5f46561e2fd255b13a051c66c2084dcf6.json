{"ast":null,"code":"var _jsxFileName = \"/Users/parishith/Documents/web-app/src/pages/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport NavBar from './componets/NavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const quotes = [\"The best way to predict the future is to invent it.\", \"Life is 10% what happens to us and 90% how we react to it.\", \"The only way to do great work is to love what you do.\", \"The only limit to our realization of tomorrow is our doubts of today.\", \"The purpose of our lives is to be happy.\"];\n  const [quote, setQuote] = useState(quotes[0]);\n  const getRandomQuote = () => {\n    const randomIndex = Math.floor(Math.random() * quotes.length);\n    setQuote(quotes[randomIndex]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '50px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"TyoLzX9purnYdbXkGPQJvgXxxVo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","NavBar","jsxDEV","_jsxDEV","App","_s","quotes","quote","setQuote","getRandomQuote","randomIndex","Math","floor","random","length","style","textAlign","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/parishith/Documents/web-app/src/pages/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport NavBar from './componets/NavBar'\n\nconst App = () => {\n  const quotes = [\n    \"The best way to predict the future is to invent it.\",\n    \"Life is 10% what happens to us and 90% how we react to it.\",\n    \"The only way to do great work is to love what you do.\",\n    \"The only limit to our realization of tomorrow is our doubts of today.\",\n    \"The purpose of our lives is to be happy.\"\n  ];\n\n  const [quote, setQuote] = useState(quotes[0]);\n\n  const getRandomQuote = () => {\n    const randomIndex = Math.floor(Math.random() * quotes.length);\n    setQuote(quotes[randomIndex]);\n  };\n\n  return (\n    <div style={{ textAlign: 'center', marginTop: '50px' }}>\n\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,MAAM,GAAG,CACb,qDAAqD,EACrD,4DAA4D,EAC5D,uDAAuD,EACvD,uEAAuE,EACvE,0CAA0C,CAC3C;EAED,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAACM,MAAM,CAAC,CAAC,CAAC,CAAC;EAE7C,MAAMG,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGP,MAAM,CAACQ,MAAM,CAAC;IAC7DN,QAAQ,CAACF,MAAM,CAACI,WAAW,CAAC,CAAC;EAC/B,CAAC;EAED,oBACEP,OAAA;IAAKY,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAElD,CAAC;AAEV,CAAC;AAAChB,EAAA,CArBID,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAuBT,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}